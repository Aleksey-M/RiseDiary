// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RiseDiary.WebUI.Data;

namespace RiseDiary.WebUI.Migrations
{
    [DbContext(typeof(DiaryDbContext))]
    [Migration("20180622204948_UpdateImageModel")]
    partial class UpdateImageModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846");

            modelBuilder.Entity("RiseDiary.Model.AppSetting", b =>
                {
                    b.Property<string>("Key")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Value");

                    b.HasKey("Key");

                    b.ToTable("AppSettings");
                });

            modelBuilder.Entity("RiseDiary.Model.Cogitation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date");

                    b.Property<bool>("Deleted");

                    b.Property<int>("RecordId");

                    b.Property<string>("Text");

                    b.HasKey("Id");

                    b.ToTable("Cogitations");
                });

            modelBuilder.Entity("RiseDiary.Model.DiaryImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateDate");

                    b.Property<bool>("Deleted");

                    b.Property<int>("Height");

                    b.Property<DateTime>("ModifyDate");

                    b.Property<string>("Name");

                    b.Property<int>("SizeBit");

                    b.Property<byte[]>("Thumbnail");

                    b.Property<int>("Width");

                    b.HasKey("Id");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("RiseDiary.Model.DiaryImageFull", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<byte[]>("Data");

                    b.HasKey("Id");

                    b.ToTable("FullSizeImages");
                });

            modelBuilder.Entity("RiseDiary.Model.DiaryRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateDate");

                    b.Property<DateTime>("Date");

                    b.Property<bool>("Deleted");

                    b.Property<DateTime>("ModifyDate");

                    b.Property<string>("Name");

                    b.Property<string>("Text");

                    b.HasKey("Id");

                    b.ToTable("Records");
                });

            modelBuilder.Entity("RiseDiary.Model.DiaryRecordImage", b =>
                {
                    b.Property<int>("RecordId");

                    b.Property<int>("ImageId");

                    b.Property<bool>("Deleted");

                    b.HasKey("RecordId", "ImageId");

                    b.ToTable("RecordImages");
                });

            modelBuilder.Entity("RiseDiary.Model.DiaryRecordTheme", b =>
                {
                    b.Property<int>("RecordId");

                    b.Property<int>("ThemeId");

                    b.Property<bool>("Deleted");

                    b.HasKey("RecordId", "ThemeId");

                    b.ToTable("RecordThemes");
                });

            modelBuilder.Entity("RiseDiary.Model.DiaryScope", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Deleted");

                    b.Property<string>("ScopeName");

                    b.HasKey("Id");

                    b.ToTable("Scopes");
                });

            modelBuilder.Entity("RiseDiary.Model.DiaryTheme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Deleted");

                    b.Property<int>("ScopeId");

                    b.Property<string>("ThemeName");

                    b.HasKey("Id");

                    b.ToTable("Themes");
                });
#pragma warning restore 612, 618
        }
    }
}
