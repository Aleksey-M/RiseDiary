@using RiseDiary.Model

@namespace RiseDiary.WebUI.Pages.Images

@inject IImagesService ImagesService

@if (EditMode)
{
    @if (ErrorMessage != null)
    {
        <p style="color:red">@ErrorMessage</p>
    }

    <div>
        <div class="form form-horizontal">
            <div class="input-group">
                <input type="text" class="form-control" @bind-value="ImageName" @bind-value:event="onchange" />
                <span class="input-group-btn">
                    <button type="button" class="btn btn-success" title="Сохранить название" @onclick="SaveImageName">
                        <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"></span>
                    </button>
                </span>
            </div>
        </div>
    </div>
}
else
{
    <div>
        <span style="float:left;padding:5px;">@ImageName</span>
        &nbsp;
        <button type="button" class="btn btn-link show-edit-form" @onclick="ToEditMode">
            <span class="glyphicon glyphicon-edit" aria-hidden="true"></span>
        </button>
    </div>
}

@code{
    [Parameter]
    public string ImageName { get; set; } = null!;
    [Parameter]
    public Guid ImageId { get; set; }
    public bool EditMode { get; set; }
    public string? ErrorMessage { get; set; }

    public void ToEditMode()
    {
        EditMode = true;
    }

    public async Task SaveImageName()
    {
        var imageName = ImageName.Trim();

        if (imageName.Length == 0)
        {
            ErrorMessage = "Новое название не введено!";
            return;
        }

        if (imageName.Length > 250)
        {
            ErrorMessage = "Длина названия не должна превышать 250 символов";
            return;
        }

        await ImagesService.UpdateImage(ImageId, imageName).ConfigureAwait(false);
        ImageName = imageName;
        ErrorMessage = null;
        EditMode = false;
    }

}
