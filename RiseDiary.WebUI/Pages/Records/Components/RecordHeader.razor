@namespace RiseDiary.WebUI.Pages.Records

@inject IJSRuntime jsRuntime 

@if (_editMode)
{
    <div class="row">
        <div class="col-lg-2 col-md-3 col-sm-12 mb-1">
            <input type="date" required="required" @bind="_recordDate" @bind:event="oninput" @bind:format="yyyy-MM-dd" class="form-control" />
        </div>
        <div class="col-lg-10 col-md-9 col-sm-12 mb-1">
            <div class="input-group">
                <input type="text" required="required" @bind="_recordName" @bind:event="oninput" class="form-control" />

                <div class="input-group-append">
                    <button type="button" class="btn btn-link" title="Сохранить изменения" @onclick="UpdateNameAndDate">
                        <img src="img/check-square.svg" />
                    </button>

                    <button type="button" class="btn btn-link" title="Закрыть" @onclick="e => { _editMode = false; }">
                        <img src="img/x-square.svg" />
                    </button>
                </div>
            </div>
        </div>        
    </div>
}
else
{
    <h5 style="color:darkblue;display:inline">
        <b>@RecordDate</b> <i>@RecordName</i>
    </h5>

    <button type="button" class="btn btn-link pt-0" title="Редактировать заголовок и дату" @onclick="e => SwitchToEditMode()">
        <img src="img/pen.svg" />
    </button>

}

@code {

    private bool _editMode;

    [Parameter]
    public string RecordName { get; set; } = "";

    [Parameter]
    public string RecordDate { get; set; } = "";

    [Parameter]
    public Func<DateTime, string, Task>? SaveRecordHeader { get; set; } = null;

    private DateTime _recordDate;
    private string _recordName = "";

    private async Task UpdateNameAndDate()
    {
        if(_recordDate.Date == DateTime.Parse(RecordDate) && _recordName.Trim() == (RecordName == "[ПУСТО]" ? "" : RecordName))
        {
            _editMode = false;
            return;
        }

        if(_recordDate == default)
        {
            await jsRuntime.InvokeVoidAsync("alert", "Дата не введена");
            return;
        }

        _editMode = false;

        if (SaveRecordHeader == null) throw new ArgumentNullException(nameof(SaveRecordHeader));

        await SaveRecordHeader(_recordDate, _recordName.Trim());
    }

    private void SwitchToEditMode()
    {
        _recordName = RecordName == "[ПУСТО]" ? "" : RecordName;
        _recordDate = DateTime.Parse(RecordDate);
        _editMode = true;
    }
}

