@page
@model RiseDiary.WebUI.Pages.CalendarModel
@{
    ViewData["Title"] = "Календарь";
    ViewData["TitlePart"] = "Календарь";
}

@section Styles
    {
    <style>
        #navigationPanel {
            background-color: #d1fffe;
            text-align: center;
        }
    </style>
}

<div class="row">
    <div class="col-sm-12">
        <div class=" panel panel-default">
            <div class="form-horizontal" id="navigationPanel">
                <form method="get">
                    @foreach (var st in Model.SelectedThemes)
                    {
                        <input type="hidden" name="themes" value="@st" />
                    }

                    <input type="hidden" name="combineThemes" value="@Model.CombineThemes.ToString()" />

                    @if (Model.YearsListFiltered.Count() > 0)
                    {
                        <input type="submit" class="btn btn-link" name="year" value="@Model.YearsListFiltered.First()" />
                        @for (int i = 1; i < Model.YearsListFiltered.Count(); i++)
                        {
                            @:| <input type="submit" class="btn btn-link" name="year" value="@Model.YearsListFiltered.ElementAt(i)" />
                        }
                    }
                </form>
            </div>
        </div>
    </div>
    <div class="col-sm-1 col-sm-offset-2" style="vertical-align:middle;height:31px;padding-right:0px">
        <input type="checkbox" style="float:right" @(Model.CombineThemes ? "checked=checked" : "") id="combineThemes" title="Выводить записи, которые относятся к любой выбранной теме (но не ко всем)" />
    </div>
    <div class="col-sm-4" style="vertical-align:middle">        
        <select multiple="multiple" name="themes[]" id="themes" placeholder="Темы" class="form-control multiselect" style="width:380px; height:30px;">
            @foreach (var scope in Model.AllScopes)
            {
                <optgroup label="@scope.ScopeName">
                    @foreach (var theme in scope.Themes)
                    {
                        @if (Model.SelectedThemes.Contains(theme.Id))
                        {
                            <option selected="selected" value="@theme.Id">@theme.ThemeName</option>
                        }
                        else
                        {
                            <option value="@theme.Id">@theme.ThemeName</option>
                        }
                    }
                </optgroup>
            }
        </select>
    </div>
    <div class="col-sm-1">
        <a class="btn btn-default" id="btnSearch">Поиск</a>
    </div>
</div>
<div id="calendar"></div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script type="text/javascript">

        const dates = [
            @for(int i=0, count = Model.Records.Count(); i<count; i++)
            {
                <text>
            {
                id: "@Model.Records.ElementAt(i).Id",
                name: "@Model.Records.ElementAt(i).Name",
                startDate: new Date("@Model.Records.ElementAt(i).StartDate.Year", "@(Model.Records.ElementAt(i).StartDate.Month-1)", "@Model.Records.ElementAt(i).StartDate.Day"),
                endDate: new Date("@Model.Records.ElementAt(i).StartDate.Year", "@(Model.Records.ElementAt(i).StartDate.Month-1)", "@Model.Records.ElementAt(i).StartDate.Day")

            }@(i != count - 1 ? "," : "")
                </text>
            }
        ];
    </script>

    <script src="~/lib/bootstrap-year-calendar/js/bootstrap-year-calendar.js"></script>
    <script type="text/javascript">

        function updateCalendar(year, themesArr) {
            let themesParam = "";
            if (themesArr !== null) {
                for (let i = 0; i < themesArr.length; i++) {
                    themesParam = themesParam + "&themes=" + themesArr[i];
                }
            }

            window.location.href =
                'Analysis/Calendar?year=' + encodeURIComponent(year) + themesParam +
                '&combineThemes=' + $('#combineThemes').prop('checked');
        }

        function getIdByStartDate(startDate) {
            let _date = startDate.getTime();
            for (let i = 0; i < dates.length; i++) {
                if (dates[i].startDate.getTime() === _date) {
                    return dates[i].id;
                }
            }
            return null;
        }

        let currentYear = parseInt("@Model.CurrentYear");

        $(function () {
            $('.multiselect').SumoSelect({ csvDispCount: 7 });
            $('.SumoSelect').width('500px');

            $('#calendar').calendar({
                style: 'background',
                enableRangeSelection: true,
                mouseOnDay: function (e) {
                    if (e.events.length > 0) {
                        var content = '';

                        for (var i in e.events) {
                            content += '<div class="event-tooltip-content">'
                                + '<div class="event-name" style="color:' + e.events[i].color + '">' + e.events[i].name + '</div>'
                                + '</div>';
                        }

                        $(e.element).popover({
                            trigger: 'manual',
                            container: 'body',
                            html: true,
                            content: content
                        });

                        $(e.element).popover('show');
                    }
                },
                mouseOutDay: function (e) {
                    if (e.events.length > 0) {
                        $(e.element).popover('hide');
                    }
                },
                selectRange: function (e) {
                    let id = getIdByStartDate(e.startDate);
                    if (id !== null) {
                        window.location.href = '/Records/View?recordId=' + encodeURIComponent(id);
                    }
                },
                startYear: parseInt("@Model.CurrentYear"),
                renderEnd: function (e) {
                    if (e.currentYear !== currentYear) {
                        updateCalendar(e.currentYear, $('.multiselect').val());
                    }
                },
                dataSource: dates
            });

            $("#btnSearch").on('click', function () {
                updateCalendar($('#calendar').data('calendar').getYear(), $('.multiselect').val());
            });
        });
    </script>
}
