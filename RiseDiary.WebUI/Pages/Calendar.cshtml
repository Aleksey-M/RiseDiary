@page
@model RiseDiary.WebUI.Pages.CalendarModel
@{
    ViewData["Title"] = "Календарь";
    ViewData["TitlePart"] = "Календарь";
}

<div class="row">
    <div class="col-sm-4 col-sm-offset-3">
        <select multiple="multiple" name="themes[]" id="themes" placeholder="Темы" class="form-control multiselect" style="width:380px">
            @foreach (var area in Model.AllAreas)
            {
                <optgroup label="@area.AreaName">
                    @foreach (var theme in Model.AllTypes.Where(t => t.AreaId == area.AreaId))
                    {
                        @if (Model.SelectedThemes.Contains(theme.RecordTypeId))
                        {
                            <option selected="selected" value="@theme.RecordTypeId">@theme.RecordTypeName</option>
                        }
                        else
                        {
                            <option value="@theme.RecordTypeId">@theme.RecordTypeName</option>
                        }
                    }
                </optgroup>
            }
        </select>
    </div>
    <div class="col-sm-1">
        <a class="btn btn-default" id="btnSearch">Поиск</a>
    </div>
</div>
<div id="calendar"></div>



@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script type="text/javascript">        
        const dates = [
            @for(int i=0, count = Model.Records.Count(); i<count; i++)
            {
                <text>
            {
                id: @Model.Records[i].RecordId,
                name: "@Model.Records[i].RecordName",
                startDate: new Date(@Model.Records[i].RecordDate.Year, @Model.Records[i].RecordDate.Month-1, @Model.Records[i].RecordDate.Day),
                endDate: new Date(@Model.Records[i].RecordDate.Year, @Model.Records[i].RecordDate.Month-1, @Model.Records[i].RecordDate.Day)

            }@(i != count - 1 ? "," : string.Empty)
                </text>
            }
        ];
    </script>

    <script src="~/lib/bootstrap-year-calendar/js/bootstrap-year-calendar.js"></script>
    <script type="text/javascript">

        function updateCalendar(year, themesArr) {
            let themesParam = "";
            if (themesArr !== null) {
                for (let i = 0; i < themesArr.length; i++) {
                    themesParam = themesParam + "&themes=" + themesArr[i];
                }
            }

            window.location.replace(
                'Calendar?handler=Filter' +
                '&year=' + encodeURIComponent(year) +
                themesParam);
        }       

        function getIdByStartDate(startDate) {
            let _date = startDate.getTime();
            for (let i = 0; i < dates.length; i++) {
                if (dates[i].startDate.getTime() === _date) {
                    return dates[i].id;
                }
            }
            return null;
        }

        let currentYear = @Model.Filters.RecordDateFrom.Value.Year;
        
        $(function () {
            $('.multiselect').SumoSelect({ csvDispCount: 7 });
            $('.SumoSelect').width('500px');

            $('#calendar').calendar({
                style: 'background',
                enableRangeSelection: true,
                mouseOnDay: function (e) {
                    if (e.events.length > 0) {
                        var content = '';

                        for (var i in e.events) {
                            content += '<div class="event-tooltip-content">'
                                + '<div class="event-name" style="color:' + e.events[i].color + '">' + e.events[i].name + '</div>'
                                + '</div>';                            
                        }

                        $(e.element).popover({
                            trigger: 'manual',
                            container: 'body',
                            html: true,
                            content: content
                        });
                        
                        $(e.element).popover('show');
                    }
                },
                mouseOutDay: function (e) {
                    if (e.events.length > 0) {
                        $(e.element).popover('hide');                                               
                    }
                },
                selectRange: function (e) {
                    let id = getIdByStartDate(e.startDate);                    
                    if (id !== null) {
                        window.location.replace('/RecordView?recordId=' + encodeURIComponent(id));                        
                    }                    
                },     
                startYear: @Model.Filters.RecordDateFrom.Value.Year,
                renderEnd: function (e) {
                    if (e.currentYear !== currentYear) {                        
                        updateCalendar(e.currentYear, $('.multiselect').val());
                    }
                },
                dataSource: dates
            });
            
            $("#btnSearch").on('click', function () {
                updateCalendar($('#calendar').data('calendar').getYear(), $('.multiselect').val());
            });

            //$('#calendar').data('calendar').set
        });
    </script>
}
