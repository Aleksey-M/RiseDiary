@using RiseDiary.Shared
@using RiseDiary.Shared.Records;
@using RiseDiary.Shared.Scopes;

<div class="row">

    <div class="col-lg-2 col-sm-6 my-2">
        <InputDate @bind-Value=@Filters.From class="form-control" title="От" />
    </div>

    <div class="col-lg-2 col-sm-6 my-2">
        <InputDate @bind-Value=@Filters.To class="form-control" title="До" />
    </div>

    <div class="col-lg-3 col-sm-12 my-2">
        <InputText @bind-Value=@Filters.Name class="form-control" placeholder="Фильтр по названию" />
    </div>

    <div class="col-lg-1 col-sm-6 my-2">
        <ThemesFilterPopup AllScopes="@AllScopes" CombinedThemes=@Filters.CombinedThemes ThemesIdsList="@Filters.Themes" OnApply="ApplyFilters" />
    </div>

    <div class="col-lg-2 col-sm-6 my-3">
        <InputCheckbox @bind-Value=@Filters.Expanded name="expanded" id="expanded" />
        <label for="expanded">Развернуто</label>
    </div>

    <div class="col-lg-2 col-sm-12 my-2">
        <button class="btn btn-outline-info" style="float: right" @onclick=@(_ => ApplyFilters(null))>Применить</button>
    </div>
</div>


@code {

    [Parameter, EditorRequired]
    public string AreaName { get; set; } = "";

    [Parameter, EditorRequired]
    public IEnumerable<ScopeDto> AllScopes { get; set; } = null!;

    [Parameter, EditorRequired]
    public RiseDiary.Shared.Records.RecordsSearchFilters Filters { get; set; } = null!;

    [Parameter, EditorRequired]
    public Func<RiseDiary.Shared.Records.RecordsSearchFilters, Task> OnSearch { get; set; } = null!;


    private async Task ApplyFilters(ThemesFilters? themesFilters)
    {
        var newFilters = new RiseDiary.Shared.Records.RecordsSearchFilters
            {
                Expanded = Filters.Expanded,
                From = Filters.From,
                CombinedThemes = Filters.CombinedThemes,
                Name = Filters.Name,
                Themes = Filters.Themes,
                To = Filters.To
            };

        if (themesFilters != null)
        {
            newFilters.Themes = themesFilters.ThemesIdsList;
            newFilters.CombinedThemes = themesFilters.Combined;
        }

        await OnSearch(newFilters);
    }
}
